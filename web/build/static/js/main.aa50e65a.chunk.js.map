{"version":3,"sources":["RequestHeaders.js","RequestParams.js","Request.js","Requests.js","SendRequest.js","Header.js","App.js","reportWebVitals.js","index.js"],"names":["pluralize","count","noun","suffix","RequestHeaders","props","className","Object","keys","headers","length","map","key","i","QueryParams","query","FormParams","form","JsonParams","src","json","name","RequestParams","params","json_array","Details","iconDown","xmlns","viewBox","fill","fillRule","d","clipRule","iconUp","data-testid","onClick","toggleDetails","showDetails","formatter","Intl","RelativeTimeFormat","undefined","numeric","DIVISIONS","amount","Number","POSITIVE_INFINITY","Request","time","duration","Date","division","Math","abs","format","round","formatTimeAgo","created_at","useState","showAllDetails","setShowDetails","useEffect","fields","method","url","id","param_fields","ALL_REQUESTS","gql","REQUESTS_SUBSCRIPTION","CLEAR_REQUESTS","filterRequests","requests","filter","request","AllRequests","loading","error","slice","sort","a","b","selectedFilter","ToggleDetails","iconHide","stroke","strokeLinecap","strokeLinejoin","strokeWidth","iconShow","toggle","Filters","filters","setSelectedFilter","Requests","useQuery","data","subscribeToMore","useMutation","update","cache","modify","clearRequests","setRequests","subscribed","setSubscribed","setShowAllDetails","document","updateQuery","prev","subscriptionData","newRequest","assign","window","confirm","SERVER_INFO","SendRequest","setMethod","setUrl","JSON","stringify","hello","body","setBody","serverInfo","request_address","request_port","visible","htmlFor","onChange","e","target","value","type","fetch","close","ServerInfo","Header","href","build_info","setSendRequestVisible","sendRequestVisible","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","splitLink","split","definition","getMainDefinition","kind","operation","client","ApolloClient","link","InMemoryCache","typePolicies","merge","ReactDOM","render","ApolloProvider","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.aa50e65a.chunk.js","sourcesContent":["function RequestHeaders(props) {\n  return (\n    <div className=\"p-4 md:w-1/2 w-full\">\n      <div className=\"bg-gray-100 p-4 rounded\">\n        <h2 className=\"tracking-midwest text-xs text-gray-400 mb-2\">\n          {pluralize(Object.keys(props.headers).length, \"HEADER\", \"S\")}\n        </h2>\n        {Object.keys(props.headers).map((key, i) => {\n          return (\n            <div key={i} className=\"flex border-t border-gray-200 py-2 text-xs\">\n              <span className=\"text-gray-500\">{key}</span>\n              <span className=\"ml-auto text-gray-900\">\n                {props.headers[key]}\n              </span>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nconst pluralize = (count, noun, suffix = \"s\") =>\n  `${count} ${noun}${count !== 1 ? suffix : \"\"}`;\n\nexport default RequestHeaders;\n","import ReactJson from \"react-json-view\";\n\nfunction RequestParams(props) {\n  if (props.params.json) {\n    return <JsonParams json={props.params.json} />;\n  } else if (props.params.json_array) {\n    return <JsonParams json={props.params.json_array} />;\n  } else if (props.params.query) {\n    return <QueryParams query={props.params.query} />;\n  } else if (props.params.form) {\n    return <FormParams form={props.params.form} />;\n  } else {\n    return (\n      <div className=\"p-4 md:w-1/2 w-full\">\n        <div className=\"bg-gray-100 p-4 rounded\">\n          <h2 className=\"tracking-midwest text-xs text-gray-400\">NO PARAMS</h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction QueryParams(props) {\n  return (\n    <div className=\"p-4 md:w-1/2 w-full\">\n      <div className=\"bg-gray-100 p-4 rounded\">\n        <h2 className=\"tracking-midwest text-xs text-gray-400 mb-2\">\n          {pluralize(Object.keys(props.query).length, \"QUERY PARAM\", \"S\")}{\" \"}\n        </h2>\n        {Object.keys(props.query).map((key, i) => {\n          return (\n            <div key={i} className=\"flex border-t border-gray-200 py-2 text-xs\">\n              <span className=\"text-gray-500\">{key}</span>\n              <span className=\"ml-auto text-gray-900\">{props.query[key]}</span>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nfunction FormParams(props) {\n  return (\n    <div className=\"p-4 md:w-1/2 w-full\">\n      <div className=\"bg-gray-100 p-4 rounded\">\n        <h2 className=\"tracking-midwest text-xs text-gray-400 mb-2\">\n          {pluralize(Object.keys(props.form).length, \"FORM PARAM\", \"S\")}\n        </h2>\n        {Object.keys(props.form).map((key, i) => {\n          return (\n            <div key={i} className=\"flex border-t border-gray-200 py-2 text-xs\">\n              <span className=\"text-gray-500\">{key}</span>\n              <span className=\"ml-auto text-gray-900\">{props.form[key]}</span>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nfunction JsonParams(props) {\n  return (\n    <div className=\"p-4 md:w-1/2 w-full\">\n      <div className=\"h-full bg-gray-100 p-4 rounded\">\n        <h2 className=\"tracking-midwest text-xs text-gray-400 mb-2\">\n          JSON BODY\n        </h2>\n        <div className=\"flex border-t border-gray-200 py-2 text-xs\">\n          <ReactJson src={props.json} name={false} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst pluralize = (count, noun, suffix = \"s\") =>\n  `${count} ${noun}${count !== 1 ? suffix : \"\"}`;\n\nexport default RequestParams;\n","import React, { useEffect, useState } from \"react\";\nimport RequestHeaders from \"./RequestHeaders\";\nimport RequestParams from \"./RequestParams\";\n\nfunction Details(props) {\n  const iconDown = (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"cursor-pointer h-8 w-8 hover:text-black\"\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n\n  const iconUp = (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"cursor-pointer h-8 w-8 hover:text-black\"\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n  return (\n    <button\n      data-testid=\"toggleDetails\"\n      onClick={props.toggleDetails}\n      className=\"focus:outline-none flex ml-auto text-gray-500\"\n    >\n      {props.showDetails ? iconDown : iconUp}\n    </button>\n  );\n}\n\nfunction Request(props) {\n  const time = formatTimeAgo(props.created_at);\n  const [showDetails, setShowDetails] = useState(props.showAllDetails);\n\n  useEffect(() => {\n    setShowDetails(props.showAllDetails);\n  }, [props.showAllDetails]); // Update this component show details if the parent show ALL details changes\n\n  return (\n    <div className=\"shadow bg-white rounded-md py-4 px-4 flex flex-wrap md:flex-nowrap mb-3 animate-slide-right\">\n      <div className=\"md:w-56 md:mb-0 mb-6 flex-shrink-0 flex flex-col\">\n        <span className=\"self-start inline-block py-1 px-2 rounded bg-indigo-50 text-indigo-500 text-s font-semibold tracking-widest\">\n          {props.fields.method}\n        </span>\n        <div className=\"mt-1 text-gray-400 text-sm\">{time}</div>\n      </div>\n      <div className=\"md:flex-grow\">\n        <div className=\"flex w-full mx-auto\">\n          <div>\n            <h2 className=\"tracking-midwest text-xs text-gray-400\">URL</h2>\n            <h2 className=\"font-medium text-gray-800 title-font mb-5 text-xl\">\n              {props.fields.url}\n            </h2>\n          </div>\n          <Details\n            id={props.id}\n            showDetails={showDetails}\n            toggleDetails={() => setShowDetails(!showDetails)}\n          />\n        </div>\n        {showDetails ? (\n          <section className=\"text-gray-600 body-font border-t-2 pt-3 border-gray-100\">\n            <div className=\"container py-2 mx-auto\">\n              <div className=\"flex flex-wrap -m-4\">\n                <RequestHeaders headers={props.headers} />\n                <RequestParams params={props.param_fields} />\n              </div>\n            </div>\n          </section>\n        ) : (\n          <div></div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// Calculate relative time\n// https://blog.webdevsimplified.com/2020-07/relative-time-format/\n//\nconst formatter = new Intl.RelativeTimeFormat(undefined, {\n  numeric: \"auto\",\n});\n\nconst DIVISIONS = [\n  { amount: 60, name: \"seconds\" },\n  { amount: 60, name: \"minutes\" },\n  { amount: 24, name: \"hours\" },\n  { amount: 7, name: \"days\" },\n  { amount: 4.34524, name: \"weeks\" },\n  { amount: 12, name: \"months\" },\n  { amount: Number.POSITIVE_INFINITY, name: \"years\" },\n];\n\nfunction formatTimeAgo(d) {\n  if (d === undefined) {\n    return \"\";\n  }\n\n  const date = new Date(d);\n  let duration = (date - new Date()) / 1000;\n\n  for (let i = 0; i <= DIVISIONS.length; i++) {\n    const division = DIVISIONS[i];\n    if (Math.abs(duration) < division.amount) {\n      return formatter.format(Math.round(duration), division.name);\n    }\n    duration /= division.amount;\n  }\n}\n\nexport default Request;\n","import { useQuery, useMutation, gql } from \"@apollo/client\";\nimport Request from \"./Request\";\nimport React, { useState, useEffect } from \"react\";\n\nexport const ALL_REQUESTS = gql`\n  query GetAllRequests {\n    requests {\n      id\n      fields {\n        method\n        url\n      }\n      headers\n      param_fields {\n        form\n        query\n        json\n        json_array\n      }\n      created_at\n    }\n  }\n`;\n\nexport const REQUESTS_SUBSCRIPTION = gql`\n  subscription OnRequestCreated {\n    request {\n      id\n      fields {\n        method\n        url\n      }\n      headers\n      param_fields {\n        form\n        query\n        json\n        json_array\n      }\n      created_at\n    }\n  }\n`;\n\nexport const CLEAR_REQUESTS = gql`\n  mutation ClearRequests {\n    clearRequests\n  }\n`;\n\nfunction filterRequests(requests, filter = \"All\") {\n  return requests.filter(\n    (request) => !(filter !== \"ALL\" && filter !== request.fields.method)\n  );\n}\n\nfunction AllRequests(props) {\n  if (props.loading) return <div>Loading requests...</div>;\n\n  if (props.error) return <div>Failed to load.</div>;\n\n  const sortedRequests = props.requests\n    .slice()\n    .sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n\n  return filterRequests(sortedRequests, props.selectedFilter).map(\n    ({ id, fields, headers, param_fields, created_at }) => (\n      <Request\n        key={id}\n        created_at={created_at}\n        fields={fields}\n        headers={headers}\n        param_fields={param_fields}\n        id={id}\n        showAllDetails={props.showAllDetails}\n      />\n    )\n  );\n}\n\nfunction ToggleDetails(props) {\n  const iconHide = (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-4 w-4 mr-1\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2}\n        d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\"\n      />\n    </svg>\n  );\n\n  const iconShow = (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-4 w-4 mr-1\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2}\n        d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n      />\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2}\n        d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\n      />\n    </svg>\n  );\n\n  return (\n    <button\n      onClick={props.toggle}\n      className=\"ml-1 items-center cursor-pointer inline-flex bg-indigo-500 border-0 py-1 px-3 focus:outline-none hover:bg-indigo-900 rounded text-white\"\n    >\n      {props.showAllDetails ? iconHide : iconShow}\n      {props.showAllDetails ? \"Hide Details\" : \"Show Details\"}\n    </button>\n  );\n}\n\nfunction Filters(props) {\n  return props.filters.map((filter, i) => (\n    <li key={i} onClick={() => props.setSelectedFilter(filter)}>\n      <button\n        className={`${\n          i === props.filters.length - 1 ? \"rounded-b\" : \"\"\n        } focus:outline-none bg-indigo-500 hover:bg-indigo-900 py-2 px-4 block w-full text-left whitespace-no-wrap`}\n      >\n        {filter}\n      </button>\n    </li>\n  ));\n}\n\nfunction Requests(props) {\n  const { loading, error, data, subscribeToMore } = useQuery(ALL_REQUESTS);\n  const [clearRequests] = useMutation(CLEAR_REQUESTS, {\n    update(cache) {\n      cache.modify({\n        fields: {\n          requests() {\n            return [];\n          },\n        },\n      });\n    },\n  });\n\n  const [requests, setRequests] = useState([]);\n  const [subscribed, setSubscribed] = useState(false);\n  const [showAllDetails, setShowAllDetails] = useState(true);\n  const [selectedFilter, setSelectedFilter] = useState(\"ALL\");\n\n  useEffect(() => {\n    if (data) {\n      setRequests(data.requests);\n    }\n\n    if (!subscribed) {\n      subscribeToMore({\n        document: REQUESTS_SUBSCRIPTION,\n        updateQuery: (prev, { subscriptionData }) => {\n          if (!subscriptionData.data) return prev;\n          const newRequest = subscriptionData.data.request;\n          return Object.assign({}, prev, {\n            requests: [newRequest, ...prev.requests],\n          });\n        },\n      });\n      setSubscribed(true);\n    }\n  }, [data, subscribed, subscribeToMore]);\n\n  return (\n    <section className=\"text-gray-600 bg-gray-100 body-font h-full\">\n      <div className=\"container px-5 py-12 mx-auto\">\n        <div className=\"flex flex-wrap w-full\">\n          <div className=\"lg:w-1/2 w-full mb-6 lg:mb-0\">\n            <div className=\"flex flex-col sm:flex-row sm:items-center items-start mx-auto\">\n              <h1 className=\"sm:text-2xl text-xl font-medium title-font mb-2 text-gray-900\">\n                {pluralize(\n                  filterRequests(requests, selectedFilter).length,\n                  \"Request\"\n                )}\n              </h1>\n            </div>\n            <div className=\"h-1 w-1/6 bg-indigo-500 rounded mb-4\"></div>\n          </div>\n          <div className=\"flex items-center lg:w-1/2 w-full mb-5 flex-row-reverse\">\n            <div className=\"group inline-block relative\">\n              <button className=\"ml-1 items-center cursor-pointer inline-flex bg-indigo-500 border-0 py-1 px-3 focus:outline-none hover:bg-indigo-900 rounded text-white\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-4 w-4 mr-1\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z\"\n                  />\n                </svg>\n                Filter: {selectedFilter}\n              </button>\n              <ul className=\"absolute hidden right-0 w-max text-white pt-1 group-hover:block z-10\">\n                <li onClick={() => setSelectedFilter(\"ALL\")}>\n                  <button className=\"focus:outline-none rounded-t bg-indigo-500 hover:bg-indigo-900 py-2 px-4 block w-full text-left whitespace-no-wrap\">\n                    ALL\n                  </button>\n                </li>\n                <Filters\n                  filters={props.filters}\n                  setSelectedFilter={setSelectedFilter}\n                />\n              </ul>\n            </div>\n            <ToggleDetails\n              showAllDetails={showAllDetails}\n              toggle={() => setShowAllDetails(!showAllDetails)}\n            />\n            <button\n              onClick={() => {\n                if (\n                  window.confirm(\"Are you sure you want to clear all requests?\")\n                )\n                  clearRequests();\n              }}\n              className=\"cursor-pointer items-center inline-flex bg-indigo-500 border-0 py-1 px-3 focus:outline-none hover:bg-indigo-900 rounded text-white\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-4 w-4 mr-1\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                />\n              </svg>\n              Clear Requests\n            </button>\n          </div>\n        </div>\n        <AllRequests\n          selectedFilter={selectedFilter}\n          error={error}\n          loading={loading}\n          requests={requests}\n          showAllDetails={showAllDetails}\n        />\n      </div>\n    </section>\n  );\n}\n\nconst pluralize = (count, noun, suffix = \"s\") =>\n  `${count} ${noun}${count !== 1 ? suffix : \"\"}`;\n\nexport default Requests;\n","import { useState, useEffect } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\n\nexport const SERVER_INFO = gql`\n  query GetServerInfo {\n    serverInfo {\n      request_address\n      request_port\n    }\n  }\n`;\n\nfunction Filters(props) {\n  return props.filters.map((filter, i) => <option key={i}>{filter}</option>);\n}\n\nfunction SendRequest(props) {\n  const { data } = useQuery(SERVER_INFO);\n  const [method, setMethod] = useState(\"GET\");\n  const [url, setUrl] = useState(\"\");\n  const [body, setBody] = useState(JSON.stringify({ hello: \"world\" }));\n\n  const sendRequest = () => {\n    fetch(url, {\n      method: method,\n      body: method === \"GET\" || method === \"HEAD\" ? null : body,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  };\n\n  useEffect(() => {\n    if (data) {\n      setUrl(\n        `http://${data.serverInfo.request_address}:${data.serverInfo.request_port}`\n      );\n    }\n  }, [data]);\n\n  if (!props.visible) {\n    return <div></div>;\n  } else {\n    return (\n      <section className=\"text-gray-600 bg-gray-100 body-font h-full\">\n        <div className=\"container p-5 mx-auto max-w-2xl\">\n          <div className=\"bg-white rounded shadow py-4 px-4\">\n            <h2 className=\"text-gray-900 text-lg mb-1 font-medium title-font\">\n              Send a Request\n            </h2>\n            <div className=\"flex flex-wrap mb-4\">\n              <div className=\"md:pr-1 md:w-2/6 sm:w-1/2 w-full\">\n                <label\n                  htmlFor=\"method\"\n                  className=\"tracking-midwest text-xs text-gray-400\"\n                >\n                  METHOD\n                </label>\n                <div className=\"flex\">\n                  <div className=\"relative w-full\">\n                    <select\n                      name=\"method\"\n                      id=\"method\"\n                      className=\"w-full rounded border appearance-none border-gray-300 py-2 focus:outline-none focus:ring-2 focus:ring-red-200 focus:border-red-500 text-base pl-3 pr-10\"\n                      onChange={(e) => setMethod(e.target.value)}\n                      value={method}\n                    >\n                      <Filters filters={props.filters} />\n                    </select>\n                    <span className=\"absolute right-0 top-0 h-full w-10 text-center text-gray-600 pointer-events-none flex items-center justify-center\">\n                      <svg\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"2\"\n                        className=\"w-4 h-4\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path d=\"M6 9l6 6 6-6\"></path>\n                      </svg>\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"md:pl-1 md:w-4/6 sm:w-1/2 w-full\">\n                <div className=\"relative\">\n                  <label\n                    htmlFor=\"url\"\n                    className=\"tracking-midwest text-xs text-gray-400\"\n                  >\n                    URL\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"url\"\n                    name=\"url\"\n                    className=\"w-full rounded border border-gray-300 focus:border-red-500 focus:bg-white focus:ring-2 focus:ring-red-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\"\n                    value={url}\n                    onChange={(e) => setUrl(e.target.value)}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"relative mb-4\">\n              <label\n                htmlFor=\"body\"\n                className=\"tracking-midwest text-xs text-gray-400\"\n              >\n                BODY\n              </label>\n              <textarea\n                id=\"body\"\n                name=\"body\"\n                className=\"w-full bg-white rounded border border-gray-300 focus:border-red-500 focus:ring-2 focus:ring-red-200 h-32 text-base outline-none text-gray-700 py-1 px-3 resize-none leading-6 transition-colors duration-200 ease-in-out\"\n                onChange={(e) => setBody(e.target.value)}\n                value={body}\n              />\n            </div>\n            <button\n              onClick={() => sendRequest()}\n              className=\"mr-2 text-white bg-red-500 border-0 py-2 px-6 focus:outline-none hover:bg-red-600 rounded text-base\"\n            >\n              Send Request\n            </button>\n            <button\n              onClick={props.close}\n              className=\"text-white bg-red-500 border-0 py-2 px-6 focus:outline-none hover:bg-red-600 rounded text-base\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default SendRequest;\n","import { useQuery, gql } from \"@apollo/client\";\n\nexport const SERVER_INFO = gql`\n  query GetServerInfo {\n    serverInfo {\n      request_address\n      request_port\n      build_info\n    }\n  }\n`;\n\nfunction ServerInfo(props) {\n  if (props.loading) return <div>Loading server info...</div>;\n\n  if (props.error) return <div>Failed to load server info.</div>;\n\n  return (\n    <div className=\"bg-gray-100 rounded py-1 px-3 text-sm flex flex-wrap items-center justify-center\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className=\"h-4 w-4 mr-1\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\"\n      >\n        <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth={2}\n          d=\"M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01\"\n        />\n      </svg>\n      Listening on: http://{props.data.serverInfo.request_address}:\n      {props.data.serverInfo.request_port}\n    </div>\n  );\n}\n\nfunction Header(props) {\n  const { loading, error, data } = useQuery(SERVER_INFO);\n\n  return (\n    <header className=\"text-gray-600 body-font border-b-2 bg-white\">\n      <div className=\"container mx-auto flex flex-wrap p-5 flex-col md:flex-row items-center\">\n        <a\n          href=\"/\"\n          className=\"flex title-font font-medium items-center text-gray-900 mb-4 md:mb-0\"\n        >\n          <span className=\"text-xl\">Request Hole</span>\n          <h2 className=\"tracking-widest text-sm ml-2 title-font font-light text-gray-400\">\n            {data ? data.serverInfo.build_info[\"version\"] : \"\"}\n          </h2>\n        </a>\n        <div className=\"md:mr-auto md:ml-4 md:py-1 md:pl-4 md:border-l md:border-gray-400\tflex flex-wrap items-center text-base justify-center\">\n          <ServerInfo loading={loading} error={error} data={data} />\n        </div>\n        <nav className=\"md:ml-auto flex flex-wrap items-center text-base justify-center\">\n          <button\n            onClick={() =>\n              props.setSendRequestVisible(!props.sendRequestVisible)\n            }\n            className=\"focus:outline-none mr-5 hover:text-gray-900 flex flex-wrap items-center text-base\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-5 w-5 mr-1\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n            >\n              <path d=\"M8.707 7.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l2-2a1 1 0 00-1.414-1.414L11 7.586V3a1 1 0 10-2 0v4.586l-.293-.293z\" />\n              <path d=\"M3 5a2 2 0 012-2h1a1 1 0 010 2H5v7h2l1 2h4l1-2h2V5h-1a1 1 0 110-2h1a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2V5z\" />\n            </svg>\n            Send a Request\n          </button>\n          <a\n            href=\"https://github.com/aaronvb/request_hole\"\n            className=\"hover:text-gray-900 flex flex-wrap items-center text-base\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-5 w-5 mr-1\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M12.316 3.051a1 1 0 01.633 1.265l-4 12a1 1 0 11-1.898-.632l4-12a1 1 0 011.265-.633zM5.707 6.293a1 1 0 010 1.414L3.414 10l2.293 2.293a1 1 0 11-1.414 1.414l-3-3a1 1 0 010-1.414l3-3a1 1 0 011.414 0zm8.586 0a1 1 0 011.414 0l3 3a1 1 0 010 1.414l-3 3a1 1 0 11-1.414-1.414L16.586 10l-2.293-2.293a1 1 0 010-1.414z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n            View Project on GitHub\n          </a>\n        </nav>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import Requests from \"./Requests\";\nimport SendRequest from \"./SendRequest\";\nimport Header from \"./Header\";\nimport { useState } from \"react\";\n\nconst filters = [\"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\", \"HEAD\"];\n\nfunction App() {\n  const [sendRequestVisible, setSendRequestVisible] = useState(false);\n  return (\n    <div>\n      <Header\n        sendRequestVisible={sendRequestVisible}\n        setSendRequestVisible={setSendRequestVisible}\n      />\n      <SendRequest\n        filters={filters}\n        visible={sendRequestVisible}\n        close={() => setSendRequestVisible(false)}\n      />\n      <Requests filters={filters} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\nimport { getMainDefinition } from \"@apollo/client/utilities\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  split,\n  HttpLink,\n} from \"@apollo/client\";\n\nconst httpLink = new HttpLink({\n  uri: \"http://localhost:8081/query\",\n});\n\nconst wsLink = new WebSocketLink({\n  uri: `ws://localhost:8081/query`,\n  options: {\n    reconnect: true,\n  },\n});\n\n// The split function takes three parameters:\n//\n// * A function that's called for each operation to execute\n// * The Link to use for an operation if the function returns a \"truthy\" value\n// * The Link to use for an operation if the function returns a \"falsy\" value\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return (\n      definition.kind === \"OperationDefinition\" &&\n      definition.operation === \"subscription\"\n    );\n  },\n  wsLink,\n  httpLink\n);\n\nconst client = new ApolloClient({\n  link: splitLink,\n  cache: new InMemoryCache({\n    typePolicies: {\n      ServerInfo: {\n        merge: false,\n      }\n    }\n  }),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}